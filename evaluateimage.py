# -*- coding: utf-8 -*-
"""EvaluateImage.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1F5zbcn77bWgxxNn3Gwf_Mge9ah__IDMT
"""

# Commented out IPython magic to ensure Python compatibility.
# %cd "/Users/arisbethaguirre/Downloads/ArtStyleModels/refined/ArtStyleModel_VGG16_new.h5"

import tensorflow as tf
from tensorflow.keras.preprocessing import image
from tensorflow.keras import models
import numpy as np
import matplotlib.pyplot as plt
#to test an image, you must have a the  model already trained and stored in a file

new_model = tf.keras.models.load_model('ArtStyleModel_VGG16_new.h5')

test_img = '/monet.jpg'

img_path = 'query/'+ test_img   #image to be tested

#image preprocessing to be used
img = image.load_img(img_path,  target_size=(150,150))
img_tensor = image.img_to_array(img)
img_tensor = np.expand_dims(img_tensor, axis = 0)
img_tensor /= 255.

#model response
confidence = new_model.predict(img_tensor)
predict_class = (confidence > 0.5).astype("int32")
print (confidence)
print ("class ", predict_class[0][0], "confindence", )

if predict_class[0][0] == 0:
  print("Impressionism")
else:
  print("No Impressionism")

plt.imshow(img_tensor[0])
plt.show()