# -*- coding: utf-8 -*-
"""ModelEvaluation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hPNCWvXV8h94pPXIaLp9XOoqj2Re8gDg
"""

new_model = tf.keras.models.load_model('ArtStyleModel_VGG16.keras')

test_datagen = ImageDataGenerator(1./255)
test_generator = test_datagen.flow_from_directory(
							test_dir,
							target_size = (150, 150),
							batch_size = 32,
							class_mode ='binary',
							)


test_loss_cnn, test_acc_cnn = new_model.evaluate(test_generator, steps=25)
print('\ntest acc :\n', test_acc_cnn)

test_imgs = test_generator[0][0]
test_labels = test_generator[0][1]


predictions = new_model.predict(test_imgs)
classes_x = (predictions > 0.5).astype(int)
classes_x

print('Model         ', 'test loss            ', ' test accuracy ')
print('Result        ', test_loss_cnn, '   ', test_acc_cnn)


from tensorflow.math import confusion_matrix

mat = confusion_matrix(classes_x, test_labels)
print('         ', 'label neg ', ' label pos')
print('pred neg    ', np.array(mat[0][0]), "        ", np.array(mat[0][1]))
print('pred pos    ', np.array(mat[1][0]), "         ", np.array(mat[1][1]))

from sklearn.metrics import f1_score
from sklearn.metrics import recall_score
from sklearn.metrics import precision_score


precision = precision_score(test_labels, classes_x)
recall = recall_score(test_labels, classes_x)
f1score = f1_score(test_labels, classes_x)

print(f1score)
print(recall)
print(precision)